name: 🚀 Sistema de Sensores CI/CD

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/dilanoch2002/sistema-sensores/sensor-app

jobs:
  test-sensors:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Descargar código
        uses: actions/checkout@v4

      - name: 🐍 Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 📦 Instalar dependencias
        run: pip install -r requirements.txt

      - name: 🧪 Probar conexión API
        run: |
          python - << 'EOF'
          import requests

          url = "https://sensores-async-api.onrender.com/api/sensors/all"
          print(f"🌐 Verificando API en: {url}")

          try:
              response = requests.get(url, timeout=10)
              print(f"✅ Código de estado: {response.status_code}")

              if response.status_code == 200:
                  data = response.json()
                  if isinstance(data, dict) and "temperatura" in data:
                      sensor_data = data["temperatura"]
                      print(f"📊 Registros obtenidos: {len(sensor_data)}")
                      if sensor_data:
                          print(f"📝 Ejemplo de dato: {sensor_data[0]}")
                      else:
                          print("⚠️ No hay datos de sensores.")
                  else:
                      print(f"⚠️ Estructura inesperada: {type(data)}")
              else:
                  print("❌ Error: La API no respondió correctamente")

          except Exception as e:
              print(f"🚨 Error al conectar con la API: {e}")
              exit(1)
          EOF

  deploy:
    needs: test-sensors
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Descargar código
        uses: actions/checkout@v4

      - name: 🐳 Login a GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏗️ Construir imagen Docker
        run: |
          docker build -t $IMAGE_NAME:latest .

      - name: 🚀 Empujar imagen
        run: |
          docker push $IMAGE_NAME:latest

      - name: ✅ Completado
        run: echo "🎉 Sistema desplegado correctamente!"
