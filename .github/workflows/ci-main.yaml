name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - src/auth-service
          - src/ingestion-service
          - src/plots-service
          - src/sensor-service

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Build Docker image
      run: |
        echo "üì¶ Building Docker image for ${{ matrix.service }}"
        cd ${{ matrix.service }}
        docker build -t myorg/${{ matrix.service }}:latest .

    - name: Run tests (health check)
      run: |
        echo "üß™ Running health check for ${{ matrix.service }}"
        cd ${{ matrix.service }}
        docker run -d --name test-${{ matrix.service }} -p 5000:5000 myorg/${{ matrix.service }}:latest
        sleep 5
        curl -f http://localhost:5000/health || (echo "‚ùå Health check failed for ${{ matrix.service }}" && exit 1)
        docker stop test-${{ matrix.service }}

    - name: Deploy to Render
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      run: |
        echo "üöÄ Triggering Render deploy for ${{ matrix.service }}"

        if [[ "${{ matrix.service }}" == "src/auth-service" ]]; then
          SERVICE_ID="srv-d3rdjtjipnbc73a7j7f0"
        elif [[ "${{ matrix.service }}" == "src/ingestion-service" ]]; then
          SERVICE_ID="srv-d3rdorbipnbc739hfkgg"
        elif [[ "${{ matrix.service }}" == "src/plots-service" ]]; then
          SERVICE_ID="srv-d3rdma0dl3ps73fahbn0"
        elif [[ "${{ matrix.service }}" == "src/sensor-service" ]]; then
          SERVICE_ID="srv-d3rdpq8dl3ps73fak0gg"
        fi

        curl -X POST "https://api.render.com/deploy/$SERVICE_ID" \
        -H "Authorization: Bearer $RENDER_API_KEY"
